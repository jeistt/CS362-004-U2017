        -:    0:Source:unittest4.c
        -:    0:Graph:unittest4.gcno
        -:    0:Data:unittest4.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:#include "dominion.h"
        -:    2:#include "dominion_helpers.h"
        -:    3:#include "cardEffects.h"
        -:    4:#include <stdio.h>
        -:    5:#include "rngs.h"
        -:    6:#include <stdlib.h>
        -:    7:#include <string.h>
        -:    8:
        -:    9:#define FNAME "DISCARD"
        -:   10:
        1:   11:int main() {
        1:   12:	int allAssertsPassed = 1;
        1:   13:	int seed = 99;
        -:   14:	struct gameState game;
        1:   15:	int k[10] = { adventurer, smithy, village, minion, mine, cutpurse, gardens, tribute, feast, outpost };
        1:   16:	int numPlayers = 2;
        -:   17:
        1:   18:	initializeGame(numPlayers, k, seed, &game);
        -:   19:
        1:   20:	printf("---------------------STARTING %s TESTS----------------------\n", FNAME);
        1:   21:	printf("TEST 1\n");
        1:   22:	printf("STARTING GAME... WITH 5 CARDS IN HAND.\n");
        1:   23:	printf("THERE ARE %d CARDS\n", game.handCount[0]);
        -:   24:	
        1:   25:	int expected = 4;
        1:   26:	int sameVal = 1;
        -:   27:
        7:   28:	while (game.handCount[0] > 0) {
        5:   29:		printf("DISCARDING CARD. THERE SHOULD BE %d CARDS NOW.\n", expected);
        5:   30:		discardCard(0, 0, &game, 0);
        5:   31:		printf("YOU HAVE %d CARDS\n", game.handCount[0]);
        5:   32:		if (game.handCount[0] != expected) {
    #####:   33:			sameVal = 0;
    #####:   34:			allAssertsPassed = 0;
        -:   35:		}
        5:   36:		expected--;
        -:   37:
        -:   38:	}
        -:   39:
        1:   40:	if (sameVal)
        1:   41:		printf("TEST PASSED\n");
        -:   42:
        1:   43:	if (allAssertsPassed)
        1:   44:		printf("----------------------ALL %s TESTS PASSED-----------------------\n", FNAME);
        -:   45:	else
    #####:   46:		printf("----------------------SOME %s TESTS FAILED-----------------------------------\n", FNAME);
        -:   47:
        1:   48:	return 0;
        -:   49:}
